[general]
import = [ "kanagawa.toml", ]
working_directory = "None" # start in previous working directory
live_config_reload = true
ipc_socket = true # unix-only

#[env]
#WINIT_X11_SCALE_FACTOR = "1.0"

[window]
dimensions = { columns = 0, lines = 0} # go to default but can limit size
position = "None" #window manage handles it
padding = {x = 0, y = 0 } # no padding
dynamic_padding = false # doesnt matter cuz no padding
decorations = "None" # I use i3 instead
opacity = 1.0
blur = false
startup_mode = "Windowed"
title = "Matchew Terminal"
dynamic_title = true
class = { instance = "Alacritty", general = "Alacritty" } # (Linux/BSD only)
decorations_theme_variant = "None"
resize_increments = true
level = "Normal"

[scrolling]
history = 10000
multiplier = 3

[font]
normal = { family = "Hack Nerd Font Mono", style = "Regular" }
bold = { family = "Hack Nerd Font Mono", style = "Bold" }
italic = { family = "Hack Nerd Font Mono", style = "Italic" }
bold_italic = { family = "Hack Nerd Font Mono", style = "Bold Italic" }
size = 13.50
offset = { x = 0, y = 0 }
builtin_box_drawing = false # change this if glyphs look weird

[bell]
animation = "Linear"
duration = 0
color = "#ffffff"
command = "None"

[selection]
semantic_escape_chars = ",â”‚`|:\"' ()[]{}<>\t"
save_to_clipboard = true

[cursor]
style.shape = "Beam"
style.blinking = "Never"
vi_mode_style.shape = "Block"
vi_mode_style.blinking = "Off"
#blink_interval = 750
#blink_timeout = 5
unfocused_hollow = true
thickness = 0.15 # 0 -> 1.0

[terminal]
shell = { program = "/usr/bin/zsh", args = ["-l"] }
osc52 = "OnlyCopy"

[mouse]
hide_when_typing = false
# bindings = [{ <mouse>, <mods>, <mode>, <command> | <chars> | <action> },]

[hints]
alphabet = "jfkdls;ahgurieowpq"

#enabled = [{ <regex>, <hyperlinks>, <post_processing>,
#<persist>, <action>, <command>, <binding>, <mouse> },]

# opens links in firefox
[[hints.enabled]]
regex = "(https://|http://)[^\\s<>\"']+"
hyperlinks = true
post_processing = true
persist = false
command = { program = "firefox", args = [] }
binding = { key = "U", mods = "Control|Shift" }
mouse.enabled = true

[keyboard]
bindings = [
	# { key = "N", mods = "Control|Shift", action = "CreateNewWindow" },
	# { key = "L", mods = "Control|Shift", chars = "l" },
	#{ <key>, <mods>, <mode>, <command> | <chars> | <action> }
	# can trigger multiple keybindings in key = "<string>"
	# mods = "Command", "Control", "Option", "Super", "Shift", "Alt"
	# bar to apply multiple
	# mode = "AppCursor", "AppKeypad", "Search", "Alt", "Vi"
	# ~ is not for mode, can be combined with |
	#command = string | {program = string, args = [string]} #fork+execute
	# chars = string #write cmd to terminal
]

# Action                | Description
# ----------------------|------------------------------------------------------
# ReceiveChar           | Allow receiving character input
# None                  | Do nothing
# Paste                 | Paste from system clipboard
# Copy                  | Copy current selection to system clipboard
# IncreaseFontSize      | Increase font size
# DecreaseFontSize      | Decrease font size
# ResetFontSize         | Reset font size to config value
# ScrollPageUp          | Scroll one page up
# ScrollPageDown        | Scroll one page down
# ScrollHalfPageUp      | Scroll half a page up
# ScrollHalfPageDown    | Scroll half a page down
# ScrollLineUp          | Scroll one line up
# ScrollLineDown        | Scroll one line down
# ScrollToTop           | Scroll to top of scrollback buffer
# ScrollToBottom        | Scroll to bottom of scrollback buffer
# ClearHistory          | Clear scrollback history
# ClearSelection        | Deselect active selection
# ClearLogNotice        | Clear error/warning log notices
# Hide                  | Hide the Alacritty window
# Minimize              | Minimize the Alacritty window
# Quit                  | Quit Alacritty
# SpawnNewInstance      | Launch a new Alacritty instance
# CreateNewWindow       | Launch a new Alacritty window
# ToggleFullscreen      | Toggle fullscreen
# ToggleMaximized       | Toggle maximized
# ToggleViMode          | Toggle vi (cursor) mode
# --------------------------|---------------------------------------------------
# SearchForward            | Start forward search
# SearchBackward           | Start backward search
# SearchFocusNext          | Focus next search match
# SearchFocusPrevious      | Focus previous search match
# SearchConfirm            | Confirm active search
# SearchCancel             | Cancel active search
# SearchClear              | Clear search regex
# SearchDeleteWord         | Delete last word from search input
# SearchHistoryPrevious    | Go to previous regex in history
# SearchHistoryNext        | Go to next regex in history
# -----------------------------------------------------------
# InlineSearchForward         | Search forward in current line
# InlineSearchBackward        | Search backward in current line
# InlineSearchForwardShort    | Like above, but stop short of char
# InlineSearchBackwardShort   | Same, but in reverse
# InlineSearchNext            | Jump to next inline match
# InlineSearchPrevious        | Jump to previous inline match

# ViMode Navigation
# --------------------------|------------------------------------------
# Up                       | Move up
# Down                     | Move down
# Left                     | Move left
# Right                    | Move right
# First                    | Move to first column/start of line
# Last                     | Move to last column/end of line
# FirstOccupied            | Move to first non-empty cell
# High                     | Move to top of screen
# Middle                   | Move to center of screen
# Low                      | Move to bottom of screen
# SemanticLeft             | Move to start of previous word
# SemanticRight            | Move to start of next word
# SemanticLeftEnd          | Move to end of previous word
# SemanticRightEnd         | Move to end of next word
# WordLeft                 | Move to start of whitespace-separated word
# WordRight                | Move to next word
# WordLeftEnd              | Move to end of previous word
# WordRightEnd             | Move to end of next word
# Bracket                  | Jump to matching bracket
# CenterAroundViCursor     | Center view on vi cursor
# Open                     | Launch URL at vi cursor
#
# ViMOde selections
# ToggleNormalSelection     | Toggle normal selection
# ToggleLineSelection       | Toggle line selection
# ToggleBlockSelection      | Toggle block (rectangular) selection
# ToggleSemanticSelection   | Toggle semantic unit selection
#
# ViMode Search Navigation
# SearchNext                | Jump to beginning of next match
# SearchPrevious            | Jump to beginning of previous match
# SearchStart               | Jump to next match *start* to the left
# SearchEnd                 | Jump to next match *end* to the right
#
# CopySelection             | Copy from selection buffer
# PasteSelection            | Paste from selection buffer

# Alacritty
# -h, --help
#     Prints help information.
# --hold
#     Remain open after child process exits.
# --daemon
#     Do not spawn an initial window.
# --print-events
#     Print all events to STDOUT.
# -q
#     Reduces the level of verbosity (the min level is -qq).
# --ref-test
#     Generates ref test
# -v
#     Increases the level of verbosity (the max level is -vvv).
# -V, --version
#     Prints version information.
# OPTIONS
# --class <GENERAL> | <GENERAL>,<INSTANCE>
#     Defines the window class hint on Linux.
#     When only the general class is passed, instance will be set to the same value.
#     Default: Alacritty,Alacritty
# -e, --command <COMMAND>...
#     Command and args to execute (must be last argument).
# --config-file <CONFIG_FILE>
#     Specify alternative configuration file.
#     Alacritty doesn't create the config file for you, but it looks for one in the following locations on UNIX systems:
#             $XDG_CONFIG_HOME/alacritty/alacritty.toml
#             $XDG_CONFIG_HOME/alacritty.toml
#             $HOME/.config/alacritty/alacritty.toml
#             $HOME/.alacritty.toml
#     On Windows, the config file will be looked for in:
#             %APPDATA%\alacritty\alacritty.toml
# --embed <PARENT>
#     X11 window ID to embed Alacritty within (decimal or hexadecimal with 0x prefix).
# -o, --option <OPTION>...
#     Override configuration file options.
#     Example: alacritty -o 'cursor.style="Beam"'
# --socket <SOCKET>
#     Path for IPC socket creation.
# -T, --title <TITLE>
#     Defines the window title.
#     Default: Alacritty
# --working-directory <WORKING_DIRECTORY>
#     Start the shell in the specified working directory.
# SUBCOMMANDS
# msg
#     Send IPC socket messages (see alacritty-msg(1)).
# migrate
#     Migrate the configuration file.
#     -c, --config-file <CONFIG_FILE>
#         Path to the configuration file.
#     -d, --dry-run
#         Only output TOML config to STDOUT.
#     -i, --skip-imports
#         Do not recurse over imports.
#     --skip-renames
#         Do not move renamed fields to their new location.
#     -s, --silent
#         Do not output to STDOUT.
#     -h, --help
#         Print help information.

# Default Keymaps
# MOUSE BINDINGS
# mouse 	mods 	action
# "Right" 		"ExpandSelection"
# "Right" 	"Control" 	"ExpandSelection"
# "Middle" 	"~Vi" 	"PasteSelection"
# KEY BINDINGS
# key 	mods 	mode 	action / chars
# "Paste" 			"Paste"
# "Copy" 			"Copy"
# "L" 	"Control" 		"ClearLogNotice"
# "Paste" 		"Vi|Search" 	"Paste"
# "L" 	"Control" 	"~Vi|~Search" 	chars: "\u000c"
# "PageUp" 	"Shift" 	"~Alt" 	"ScrollPageUp"
# "PageDown" 	"Shift" 	"~Alt" 	"ScrollPageDown"
# "Home" 	"Shift" 	"~Alt" 	"ScrollToTop"
# "End" 	"Shift" 	"~Alt" 	"ScrollToBottom"
# Vi Mode
# key 	mods 	mode 	action
# "Space" 	"Shift|Control" 	"~Search" 	"ToggleViMode"
# "Space" 	"Shift|Control" 	"Vi|~Search" 	"ScrollToBottom"
# "Escape" 		"Vi|~Search" 	"ClearSelection"
# "I" 		"Vi|~Search" 	"ToggleViMode"
# "I" 		"Vi|~Search" 	"ScrollToBottom"
# "C" 	"Control" 	"Vi|~Search" 	"ToggleViMode"
# "Y" 	"Control" 	"Vi|~Search" 	"ScrollLineUp"
# "E" 	"Control" 	"Vi|~Search" 	"ScrollLineDown"
# "G" 		"Vi|~Search" 	"ScrollToTop"
# "G" 	"Shift" 	"Vi|~Search" 	"ScrollToBottom"
# "B" 	"Control" 	"Vi|~Search" 	"ScrollPageUp"
# "F" 	"Control" 	"Vi|~Search" 	"ScrollPageDown"
# "U" 	"Control" 	"Vi|~Search" 	"ScrollHalfPageUp"
# "D" 	"Control" 	"Vi|~Search" 	"ScrollHalfPageDown"
# "Y" 		"Vi|~Search" 	"Copy"
# "Y" 		"Vi|~Search" 	"ClearSelection"
# "Copy" 		"Vi|~Search" 	"ClearSelection"
# "V" 		"Vi|~Search" 	"ToggleNormalSelection"
# "V" 	"Shift" 	"Vi|~Search" 	"ToggleLineSelection"
# "V" 	"Control" 	"Vi|~Search" 	"ToggleBlockSelection"
# "V" 	"Alt" 	"Vi|~Search" 	"ToggleSemanticSelection"
# "Enter" 		"Vi|~Search" 	"Open"
# "Z" 		"Vi|~Search" 	"CenterAroundViCursor"
# "F" 		"Vi|~Search" 	"InlineSearchForward"
# "F" 	"Shift" 	"Vi|~Search" 	"InlineSearchBackward"
# "T" 		"Vi|~Search" 	"InlineSearchForwardShort"
# "T" 	"Shift" 	"Vi|~Search" 	"InlineSearchBackwardShort"
# ";" 		"Vi|~Search" 	"InlineSearchNext"
# "," 		"Vi|~Search" 	"InlineSearchPrevious"
# "K" 		"Vi|~Search" 	"Up"
# "J" 		"Vi|~Search" 	"Down"
# "H" 		"Vi|~Search" 	"Left"
# "L" 		"Vi|~Search" 	"Right"
# "ArrowUp" 		"Vi|~Search" 	"Up"
# "ArrowDown" 		"Vi|~Search" 	"Down"
# "ArrowLeft" 		"Vi|~Search" 	"Left"
# "ArrowRight" 		"Vi|~Search" 	"Right"
# "0" 		"Vi|~Search" 	"First"
# "$" 	"Shift" 	"Vi|~Search" 	"Last"
# "Home" 		"Vi|~Search" 	"First"
# "End" 		"Vi|~Search" 	"Last"
# "^" 	"Shift" 	"Vi|~Search" 	"FirstOccupied"
# "H" 	"Shift" 	"Vi|~Search" 	"High"
# "M" 	"Shift" 	"Vi|~Search" 	"Middle"
# "L" 	"Shift" 	"Vi|~Search" 	"Low"
# "B" 		"Vi|~Search" 	"SemanticLeft"
# "W" 		"Vi|~Search" 	"SemanticRight"
# "E" 		"Vi|~Search" 	"SemanticRightEnd"
# "B" 	"Shift" 	"Vi|~Search" 	"WordLeft"
# "W" 	"Shift" 	"Vi|~Search" 	"WordRight"
# "E" 	"Shift" 	"Vi|~Search" 	"WordRightEnd"
# "%" 	"Shift" 	"Vi|~Search" 	"Bracket"
# "/" 		"Vi|~Search" 	"SearchForward"
# "?" 	"Shift" 	"Vi|~Search" 	"SearchBackward"
# "N" 		"Vi|~Search" 	"SearchNext"
# "N" 	"Shift" 	"Vi|~Search" 	"SearchPrevious"
# Search Mode
# key 	mods 	mode 	action
# "Enter" 		"Search|Vi" 	"SearchConfirm"
# "Escape" 		"Search" 	"SearchCancel"
# "C" 	"Control" 	"Search" 	"SearchCancel"
# "U" 	"Control" 	"Search" 	"SearchClear"
# "W" 	"Control" 	"Search" 	"SearchDeleteWord"
# "P" 	"Control" 	"Search" 	"SearchHistoryPrevious"
# "N" 	"Control" 	"Search" 	"SearchHistoryNext"
# "ArrowUp" 		"Search" 	"SearchHistoryPrevious"
# "ArrowDown" 		"Search" 	"SearchHistoryNext"
# "Enter" 		"Search|~Vi" 	"SearchFocusNext"
# Windows, Linux, and BSD only
# key 	mods 	mode 	action
# "V" 	"Control|Shift" 	"~Vi" 	"Paste"
# "V" 	"Control|Shift" 	"Vi|Search" 	"Paste"
# "C" 	"Control|Shift" 		"Copy"
# "F" 	"Control|Shift" 	"~Search" 	"SearchForward"
# "B" 	"Control|Shift" 	"~Search" 	"SearchBackward"
# "C" 	"Control|Shift" 	"Vi|~Search" 	"ClearSelection"
# "Insert" 	"Shift" 		"PasteSelection"
# "0" 	"Control" 		"ResetFontSize"
# "=" 	"Control" 		"IncreaseFontSize"
# "+" 	"Control" 		"IncreaseFontSize"
# "NumpadAdd" 	"Control" 		"IncreaseFontSize"
# "-" 	"Control" 		"DecreaseFontSize"
# "NumpadSubtract" 	"Control" 		"DecreaseFontSize"
# Windows only
# key 	mods 	mode 	action
# "Enter" 	"Alt" 		"ToggleFullscreen"
# macOS only
# key 	mods 	mode 	action / chars
# "K" 	"Command" 	"~Vi|~Search" 	chars: "\u000c"
# "K" 	"Command" 	"~Vi|~Search" 	"ClearHistory"
# "0" 	"Command" 		"ResetFontSize"
# "=" 	"Command" 		"IncreaseFontSize"
# "+" 	"Command" 		"IncreaseFontSize"
# "NumpadAdd" 	"Command" 		"IncreaseFontSize"
# "-" 	"Command" 		"DecreaseFontSize"
# "NumpadSubtract" 	"Command" 		"DecreaseFontSize"
# "V" 	"Command" 	"~Vi" 	"Paste"
# "V" 	"Command" 	"Vi|Search" 	"Paste"
# "C" 	"Command" 		"Copy"
# "C" 	"Command" 	"Vi|~Search" 	"ClearSelection"
# "H" 	"Command" 		"Hide"
# "H" 	"Command|Alt" 		"HideOtherApplications"
# "M" 	"Command" 		"Minimize"
# "Q" 	"Command" 		"Quit"
# "W" 	"Command" 		"Quit"
# "N" 	"Command" 		"CreateNewWindow"
# "T" 	"Command" 		"CreateNewTab"
# "F" 	"Command|Control" 		"ToggleFullscreen"
# "F" 	"Command" 	"~Search" 	"SearchForward"
# "B" 	"Command" 	"~Search" 	"SearchBackward"
# "]" 	"Command|Shift" 		"SelectNextTab"
# "[" 	"Command|Shift" 		"SelectPreviousTab"
# "Tab" 	"Command" 		"SelectNextTab"
# "Tab" 	"Command|Shift" 		"SelectPreviousTab"
# "1" 	"Command" 		"SelectTab1"
# "2" 	"Command" 		"SelectTab2"
# "3" 	"Command" 		"SelectTab3"
# "4" 	"Command" 		"SelectTab4"
# "5" 	"Command" 		"SelectTab5"
# "6" 	"Command" 		"SelectTab6"
# "7" 	"Command" 		"SelectTab7"
# "8" 	"Command" 		"SelectTab8"
# "9" 	"Command" 		"SelectLastTab"

# NAME
# alacritty-msg - Send messages to Alacritty.
# SYNOPSIS
# This command communicates with running Alacritty instances through a socket, making it possible to control Alacritty without directly accessing it.
# OPTIONS
# -s, --socket <SOCKET>
#     Path for IPC socket communication.
# MESSAGES
# create-window
#     Create a new window in the same Alacritty process.
#     FLAGS
#         --hold
#             Remain open after child process exits.
#     OPTIONS
#         --working-directory <WORKING_DIRECTORY>
#             Start the shell in the specified working directory.
#         -T, --title <TITLE>
#             Defines the window title.
#             Default: Alacritty
#         --class <GENERAL> | <GENERAL>,<INSTANCE>
#             Defines window class/app_id on X11/Wayland.
#             Default: Alacritty,Alacritty
#         -o, --option <OPTION>...
#             Override configuration file options.
#             Example: alacritty msg create-window -o 'cursor.style="Beam"'
#         -e, --command <COMMAND>...
#             Command and args to execute (must be last argument).
# config
#     Update the Alacritty configuration.
#     ARGS
#         <CONFIG_OPTIONS>...
#             Configuration file options.
#             Example: alacritty msg config 'cursor.style="Beam"'
#     FLAGS
#         -r, --reset
#             Clear all runtime configuration changes.
#     OPTIONS
#         -w, --window-id <WINDOW_ID>
#             Window ID for the new config.
#             Use -1 to apply this change to all windows.
#             Default: $ALACRITTY_WINDOW_ID
